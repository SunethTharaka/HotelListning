// <auto-generated />
using HotelListning2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelListning2.Migrations
{
    [DbContext(typeof(DatabaseContaxt))]
    [Migration("20210715182207_seedingData")]
    partial class seedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelListning2.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sri Lanka",
                            ShortName = "SL"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Singapore",
                            ShortName = "SI"
                        },
                        new
                        {
                            Id = 3,
                            Name = "New Zealand",
                            ShortName = "NZ"
                        });
                });

            modelBuilder.Entity("HotelListning2.Data.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "2, Galle Road, Kollupitiya, 00100 Colombo, Sri Lanka",
                            CountryId = 1,
                            Name = "Galle Face Hotel",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 2,
                            Address = "1 Galle Face, Colombo 02 , 00200 Colombo, Sri Lanka",
                            CountryId = 1,
                            Name = "Shangri-La",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "590 Marine Drive, 00300 Colombo, Sri Lanka ",
                            CountryId = 1,
                            Name = "Marino Beach Colombo",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 4,
                            Address = "86 East Coast Road, Katong, 428788 Singapore, Singapore",
                            CountryId = 2,
                            Name = "Hotel Indigo Singapore Katong",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 5,
                            Address = "1 Farrer Park Station Road, Farrer Park, 217562 Singapore, Singapore",
                            CountryId = 2,
                            Name = "One Farrer Hotel",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 6,
                            Address = "3 Upper Pickering Street, Chinatown, 058289 Singapore, Singapore",
                            CountryId = 2,
                            Name = "PARKROYAL COLLECTION Pickering",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 7,
                            Address = "83 Symonds Street, 1140 Auckland, New Zealand",
                            CountryId = 3,
                            Name = "Cordis, Auckland by Langham Hospitality Group",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 8,
                            Address = "58-60 Queen Street, 1001 Auckland, New Zealand ",
                            CountryId = 3,
                            Name = "Hotel Grand Windsor MGallery by Sofitel",
                            Rating = 5.0
                        });
                });

            modelBuilder.Entity("HotelListning2.Data.Hotel", b =>
                {
                    b.HasOne("HotelListning2.Data.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
